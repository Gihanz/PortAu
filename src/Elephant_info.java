/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * Elephant_info.java
 *
 * Created on Feb 2, 2013, 4:15:49 PM
 */

/**
 *
 * @author GIHANZ
 */
import java.sql.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.*;
import net.proteanit.sql.DbUtils;
import java.awt.*;
import java.awt.event.*;
import java.util.Calendar;
import java.util.GregorianCalendar;
import java.text.*;
import java.awt.print.*;


public class Elephant_info extends javax.swing.JFrame {
   
Connection conn=null;
ResultSet rs=null;
PreparedStatement pst=null;
    /** Creates new form Employee_info */
    public Elephant_info() {
        initComponents();
        conn=mysqlconnect.ConnecrDb();
        setIcon();
        Update_table();
        CurrentDate();
    }

 

    public void CurrentDate(){
        
        Calendar cal=new GregorianCalendar();
        int month=cal.get(Calendar.MONTH);
        int year=cal.get(Calendar.YEAR);
        int day=cal.get(Calendar.DAY_OF_MONTH);
        date_txt.setText("Date : "+year+"/"+(month+1)+"/"+day);
        
        int second=cal.get(Calendar.SECOND);
        int minute=cal.get(Calendar.MINUTE);
        int hour=cal.get(Calendar.HOUR);
        time_txt.setText("Time : "+hour+":"+minute+":"+second);
        
        
    }

    public void close(){
        WindowEvent winClosingEvent=new WindowEvent(this,WindowEvent.WINDOW_CLOSING);
        Toolkit.getDefaultToolkit().getSystemEventQueue().postEvent(winClosingEvent);
    }

private void Update_table(){

    try{
    String sql="select * from Elephantinfo";
    pst=conn.prepareStatement(sql);
    rs=pst.executeQuery();
    Table_Elephant.setModel(DbUtils.resultSetToTableModel(rs));

    }catch(Exception e){
        JOptionPane.showMessageDialog(null, e);
    }finally{
        try{
            rs.close();
            pst.close();
      }catch(Exception e){

                         }
    }


}

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        Table_Elephant = new javax.swing.JTable();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        Cmd_update = new javax.swing.JButton();
        Cmd_delete = new javax.swing.JButton();
        Cmd_new = new javax.swing.JButton();
        Cmd_save = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txt_Elephantid = new javax.swing.JTextField();
        txt_Sex = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txt_Elephantname = new javax.swing.JTextField();
        txt_Death = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txt_Placeofcapture = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txt_Remarks = new javax.swing.JTextField();
        Cmd_breed = new javax.swing.JButton();
        Cmd_clinical = new javax.swing.JButton();
        Cmd_behavioral = new javax.swing.JButton();
        txt_Dateofbirth = new com.toedter.calendar.JDateChooser();
        txt_Dateofregistration = new com.toedter.calendar.JDateChooser();
        txt_Mother = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        txt_Father = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        txt_search = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        Cmd_print = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        jMenuItem13 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenuItem5 = new javax.swing.JMenuItem();
        jMenuItem6 = new javax.swing.JMenuItem();
        jMenuItem7 = new javax.swing.JMenuItem();
        jMenu4 = new javax.swing.JMenu();
        jMenuItem10 = new javax.swing.JMenuItem();
        jMenuItem11 = new javax.swing.JMenuItem();
        jMenuItem12 = new javax.swing.JMenuItem();
        date_txt = new javax.swing.JMenu();
        time_txt = new javax.swing.JMenu();
        jMenu3 = new javax.swing.JMenu();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem8 = new javax.swing.JMenuItem();
        jMenuItem14 = new javax.swing.JMenuItem();
        jSeparator2 = new javax.swing.JPopupMenu.Separator();
        jMenuItem9 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Pinnawela Elephant Orphanage - Medical System [ Elephant Information ]");

        Table_Elephant.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4", "Title 5", "Title 6", "Title 7", "Title 8", "Title 9", "Title 10"
            }
        ));
        Table_Elephant.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Table_ElephantMouseClicked(evt);
            }
        });
        Table_Elephant.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                Table_ElephantKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                Table_ElephantKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(Table_Elephant);

        jLabel9.setFont(new java.awt.Font("Segoe UI Light", 1, 36));
        jLabel9.setForeground(new java.awt.Color(0, 51, 51));
        jLabel9.setText("Pinnawala Elephant Orphanage ");

        jLabel10.setFont(new java.awt.Font("Segoe UI Light", 1, 24));
        jLabel10.setForeground(new java.awt.Color(0, 51, 51));
        jLabel10.setText("Elephant Medical System Database");

        jLabel11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/logo.png"))); // NOI18N

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        Cmd_update.setIcon(new javax.swing.ImageIcon(getClass().getResource("/update.png"))); // NOI18N
        Cmd_update.setText("Update");
        Cmd_update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Cmd_updateActionPerformed(evt);
            }
        });

        Cmd_delete.setText("Delete");
        Cmd_delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Cmd_deleteActionPerformed(evt);
            }
        });

        Cmd_new.setIcon(new javax.swing.ImageIcon(getClass().getResource("/new.png"))); // NOI18N
        Cmd_new.setText("New");
        Cmd_new.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Cmd_newActionPerformed(evt);
            }
        });

        Cmd_save.setIcon(new javax.swing.ImageIcon(getClass().getResource("/save.png"))); // NOI18N
        Cmd_save.setText("Save");
        Cmd_save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Cmd_saveActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Cmd_save, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addComponent(Cmd_new, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35)
                .addComponent(Cmd_delete, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addComponent(Cmd_update)
                .addGap(10, 10, 10))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Cmd_update)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(Cmd_save, javax.swing.GroupLayout.Alignment.LEADING, 0, 0, Short.MAX_VALUE)
                        .addComponent(Cmd_delete, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Cmd_new, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Elephant Info", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI Light", 1, 18), new java.awt.Color(0, 51, 51))); // NOI18N
        jPanel2.setForeground(new java.awt.Color(0, 51, 51));

        jLabel5.setText("Date of registration");

        jLabel4.setText("Date of birth");

        jLabel3.setText("Sex");

        txt_Elephantid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_ElephantidActionPerformed(evt);
            }
        });

        jLabel1.setText("Elephant ID");

        jLabel2.setText("Elephant Name");

        jLabel8.setText("Remarks");

        jLabel7.setText("Death/Exchange");

        jLabel6.setText("Place of capture/birth");

        Cmd_breed.setText("Breeding Records");
        Cmd_breed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Cmd_breedActionPerformed(evt);
            }
        });

        Cmd_clinical.setText("Clinical Records");
        Cmd_clinical.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Cmd_clinicalActionPerformed(evt);
            }
        });

        Cmd_behavioral.setText("Behavioral Records");
        Cmd_behavioral.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Cmd_behavioralActionPerformed(evt);
            }
        });

        txt_Dateofbirth.setDateFormatString("yyyy-MM-dd");

        txt_Dateofregistration.setDateFormatString("yyyy-MM-dd");

        jLabel14.setText("Mother");

        jLabel15.setText("Father");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txt_Elephantid, javax.swing.GroupLayout.DEFAULT_SIZE, 186, Short.MAX_VALUE)
                            .addComponent(txt_Elephantname, javax.swing.GroupLayout.DEFAULT_SIZE, 186, Short.MAX_VALUE)
                            .addComponent(txt_Sex, javax.swing.GroupLayout.DEFAULT_SIZE, 186, Short.MAX_VALUE)
                            .addComponent(txt_Dateofbirth, javax.swing.GroupLayout.DEFAULT_SIZE, 186, Short.MAX_VALUE)
                            .addComponent(txt_Mother, javax.swing.GroupLayout.DEFAULT_SIZE, 186, Short.MAX_VALUE)
                            .addComponent(txt_Father, javax.swing.GroupLayout.DEFAULT_SIZE, 186, Short.MAX_VALUE)
                            .addComponent(txt_Dateofregistration, javax.swing.GroupLayout.DEFAULT_SIZE, 186, Short.MAX_VALUE)
                            .addComponent(txt_Placeofcapture, javax.swing.GroupLayout.DEFAULT_SIZE, 186, Short.MAX_VALUE)
                            .addComponent(txt_Death, javax.swing.GroupLayout.DEFAULT_SIZE, 186, Short.MAX_VALUE)
                            .addComponent(txt_Remarks, javax.swing.GroupLayout.DEFAULT_SIZE, 186, Short.MAX_VALUE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(99, 99, 99)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(Cmd_breed, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Cmd_behavioral, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Cmd_clinical, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 136, Short.MAX_VALUE))))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_Elephantid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_Elephantname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_Sex, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(txt_Dateofbirth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_Mother, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel14))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_Father, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel15)))
                    .addComponent(jLabel4))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(txt_Dateofregistration, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_Placeofcapture, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6)))
                    .addComponent(jLabel5))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_Death, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_Remarks, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 33, Short.MAX_VALUE)
                .addComponent(Cmd_clinical)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Cmd_behavioral)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Cmd_breed)
                .addContainerGap())
        );

        txt_search.setBackground(new java.awt.Color(204, 255, 204));
        txt_search.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_searchKeyReleased(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Segoe UI Semibold", 1, 14));
        jLabel12.setForeground(new java.awt.Color(0, 51, 51));
        jLabel12.setText("Search");

        jLabel13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/search.png"))); // NOI18N

        Cmd_print.setIcon(new javax.swing.ImageIcon(getClass().getResource("/print.png"))); // NOI18N
        Cmd_print.setText("Print");
        Cmd_print.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Cmd_printActionPerformed(evt);
            }
        });

        jMenu1.setText("File");

        jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/new.png"))); // NOI18N
        jMenuItem1.setText("New                              ");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);
        jMenu1.add(jSeparator1);

        jMenuItem13.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_P, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/print.png"))); // NOI18N
        jMenuItem13.setText("Print");
        jMenuItem13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem13ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem13);

        jMenuItem2.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.ALT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/close.png"))); // NOI18N
        jMenuItem2.setText("Close");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenu2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenu2ActionPerformed(evt);
            }
        });

        jMenuItem4.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/new.png"))); // NOI18N
        jMenuItem4.setText("New                                  ");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem4);

        jMenuItem5.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/save.png"))); // NOI18N
        jMenuItem5.setText("Save");
        jMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem5ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem5);

        jMenuItem6.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_DELETE, 0));
        jMenuItem6.setText("Delete");
        jMenuItem6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem6ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem6);

        jMenuItem7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/update.png"))); // NOI18N
        jMenuItem7.setText("Update");
        jMenuItem7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem7ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem7);

        jMenuBar1.add(jMenu2);

        jMenu4.setText("Window");

        jMenuItem10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/database.png"))); // NOI18N
        jMenuItem10.setText("All Clinical records                              ");
        jMenuItem10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem10ActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItem10);

        jMenuItem11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/database.png"))); // NOI18N
        jMenuItem11.setText("All Behavioral records");
        jMenuItem11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem11ActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItem11);

        jMenuItem12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/database.png"))); // NOI18N
        jMenuItem12.setText("All Breeding records");
        jMenuItem12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem12ActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItem12);

        jMenuBar1.add(jMenu4);

        date_txt.setText(" Date");
        jMenuBar1.add(date_txt);

        time_txt.setText("Time");
        jMenuBar1.add(time_txt);

        jMenu3.setText("Help");

        jMenuItem3.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F1, java.awt.event.InputEvent.SHIFT_MASK));
        jMenuItem3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/help.png"))); // NOI18N
        jMenuItem3.setText("Help Contents               ");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem3);

        jMenuItem8.setText("Online Help");
        jMenu3.add(jMenuItem8);

        jMenuItem14.setText("Pinnawala Official Website");
        jMenuItem14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem14ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem14);
        jMenu3.add(jSeparator2);

        jMenuItem9.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F1, 0));
        jMenuItem9.setText("About");
        jMenuItem9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem9ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem9);

        jMenuBar1.add(jMenu3);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 394, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(156, 156, 156)
                                .addComponent(jLabel11))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 967, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 404, Short.MAX_VALUE)
                                .addComponent(Cmd_print, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(20, 20, 20))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txt_search, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel13)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 266, Short.MAX_VALUE)
                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 548, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(208, 208, 208)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel13)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel9)
                                        .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(txt_search, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel10))
                            .addComponent(jLabel11))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 443, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(Cmd_print)
                                .addGap(13, 13, 13)))))
                .addContainerGap(21, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void Table_ElephantMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Table_ElephantMouseClicked

        try{
            int row=Table_Elephant.getSelectedRow();
            String Table_click=(Table_Elephant.getModel().getValueAt(row,0).toString());
            String sql="select * from Elephantinfo where Elephantid= '"+Table_click+" '";
            pst=conn.prepareStatement(sql);
            rs=pst.executeQuery();
            
            if(rs.next()){
                String add1=rs.getString("elephantid");
                txt_Elephantid.setText(add1);
                String add2=rs.getString("elephantname");
                txt_Elephantname.setText(add2);
                String add3=rs.getString("sex");
                txt_Sex.setText(add3);
                Date add4=rs.getDate("dateofbirth");
                txt_Dateofbirth.setDate(add4);
                String add5=rs.getString("mother");
                txt_Mother.setText(add5);
                String add6=rs.getString("father");
                txt_Father.setText(add6);
                Date add7=rs.getDate("dateofregistration");
                txt_Dateofregistration.setDate(add7);
                String add8=rs.getString("placeofcapturebirth");
                txt_Placeofcapture.setText(add8);
                String add9=rs.getString("deathexchange");
                txt_Death.setText(add9);
                String add10=rs.getString("remarks");
                txt_Remarks.setText(add10);

            }

        }catch(Exception e){

            JOptionPane.showMessageDialog(null, e);

        }
    }//GEN-LAST:event_Table_ElephantMouseClicked

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        close();
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void Cmd_saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Cmd_saveActionPerformed

        try{
            String sql="INSERT INTO elephantinfo (elephantid,elephantname,sex,dateofbirth,mother,father,dateofregistration,placeofcapturebirth,deathexchange,remarks) VALUES (?,?,?,?,?,?,?,?,?,?)";
            pst=conn.prepareStatement(sql);
            
            pst.setString(1, txt_Elephantid.getText());
            pst.setString(2, txt_Elephantname.getText());
            pst.setString(3, txt_Sex.getText());
            pst.setString(4, ((JTextField) txt_Dateofbirth.getDateEditor().getUiComponent()).getText());
            pst.setString(5, txt_Mother.getText());
            pst.setString(6, txt_Father.getText());
            pst.setString(7, ((JTextField) txt_Dateofregistration.getDateEditor().getUiComponent()).getText());
            pst.setString(8, txt_Placeofcapture.getText());
            pst.setString(9, txt_Death.getText());
            pst.setString(10, txt_Remarks.getText());

            pst.execute();

            JOptionPane.showMessageDialog(null,"Saved");


        }catch(Exception e){
            JOptionPane.showMessageDialog(null,e);
        }
        Update_table();
    }//GEN-LAST:event_Cmd_saveActionPerformed

    private void Cmd_deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Cmd_deleteActionPerformed

        int p=JOptionPane.showConfirmDialog(null, "Do you really want to delete ?","Delete",JOptionPane.YES_NO_OPTION);
       
     if(p==0){

        String sql="delete from Elephantinfo where Elephantid =?";

        try{
            pst=conn.prepareStatement(sql);            
            pst.setString(1, txt_Elephantid.getText());
            pst.execute();
            JOptionPane.showMessageDialog(null,"Deleted");

        }catch(Exception e){
            JOptionPane.showMessageDialog(null,e);
        }
        Update_table();
        }

    }//GEN-LAST:event_Cmd_deleteActionPerformed

    private void Cmd_updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Cmd_updateActionPerformed

        try{
            String value1=txt_Elephantid.getText();
            String value2=txt_Elephantname.getText();
            String value3=txt_Sex.getText();
            String value4=((JTextField) txt_Dateofbirth.getDateEditor().getUiComponent()).getText();
            String value5=txt_Mother.getText();
            String value6=txt_Father.getText();
            String value7=((JTextField) txt_Dateofregistration.getDateEditor().getUiComponent()).getText();
            String value8=txt_Placeofcapture.getText();
            String value9=txt_Death.getText();
            String value10=txt_Remarks.getText();

           String sql="update Elephantinfo set elephantid='"+value1+"',elephantname='"+value2+"',sex='"+value3+"',dateofbirth='"+value4+"',mother='"+value5+"',father='"+value6+"',dateofregistration='"+value7+"',placeofcapturebirth='"+value8+"',deathexchange='"+value9+"',remarks='"+value10+"' where elephantid='"+value1+"' ";
           pst=conn.prepareStatement(sql);
           pst.execute();
           JOptionPane.showMessageDialog(null,"Updated");

        }catch(Exception e){
            JOptionPane.showMessageDialog(null,e);

        }
        Update_table();
    }//GEN-LAST:event_Cmd_updateActionPerformed

    private void Cmd_newActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Cmd_newActionPerformed

        txt_Elephantid.setText("");
        txt_Elephantname.setText("");
        txt_Sex.setText("");
        txt_Dateofbirth.setDate(null);
        txt_Mother.setText("");
        txt_Father.setText("");
        txt_Dateofregistration.setDate(null);
        txt_Placeofcapture.setText("");
        txt_Death.setText("");
        txt_Remarks.setText("");

    }//GEN-LAST:event_Cmd_newActionPerformed

    private void txt_searchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_searchKeyReleased
       
        try{
            String sql="select * from Elephantinfo where elephantname=?";
            
            pst=conn.prepareStatement(sql);
            pst.setString(1,txt_search.getText());
            
            rs=pst.executeQuery();
            if(rs.next()){
                String add1=rs.getString("elephantid");
                txt_Elephantid.setText(add1);
                String add2=rs.getString("elephantname");
                txt_Elephantname.setText(add2);
                String add3=rs.getString("sex");
                txt_Sex.setText(add3);
                Date add4=rs.getDate("dateofbirth");
                txt_Dateofbirth.setDate(add4);
                String add5=rs.getString("mother");
                txt_Mother.setText(add5);
                String add6=rs.getString("father");
                txt_Father.setText(add6);
                Date add7=rs.getDate("dateofregistration");
                txt_Dateofregistration.setDate(add7);
                String add8=rs.getString("placeofcapturebirth");
                txt_Placeofcapture.setText(add8);
                String add9=rs.getString("deathexchange");
                txt_Death.setText(add9);
                String add10=rs.getString("remarks");
                txt_Remarks.setText(add10);
                               
            }
                                   
        }catch(Exception e){
             JOptionPane.showMessageDialog(null,e);
            
        }

         try{
            String sql="select * from Elephantinfo where elephantid=?";

            pst=conn.prepareStatement(sql);
            pst.setString(1,txt_search.getText());

            rs=pst.executeQuery();
            if(rs.next()){
                String add1=rs.getString("elephantid");
                txt_Elephantid.setText(add1);
                String add2=rs.getString("elephantname");
                txt_Elephantname.setText(add2);
                String add3=rs.getString("sex");
                txt_Sex.setText(add3);
                Date add4=rs.getDate("dateofbirth");
                txt_Dateofbirth.setDate(add4);
                String add5=rs.getString("mother");
                txt_Mother.setText(add5);
                String add6=rs.getString("father");
                txt_Father.setText(add6);
                Date add7=rs.getDate("dateofregistration");
                txt_Dateofregistration.setDate(add7);
                String add8=rs.getString("placeofcapturebirth");
                txt_Placeofcapture.setText(add8);
                String add9=rs.getString("deathexchange");
                txt_Death.setText(add9);
                String add10=rs.getString("remarks");
                txt_Remarks.setText(add10);

            }

        }catch(Exception e){
             JOptionPane.showMessageDialog(null,e);

        }
        
    }//GEN-LAST:event_txt_searchKeyReleased

    private void Table_ElephantKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Table_ElephantKeyPressed
       
    }//GEN-LAST:event_Table_ElephantKeyPressed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed

        try{
            Runtime.getRuntime().exec("rundll32 url.dll,FileProtocolHandler "+"C:\\Users\\GIHANZ\\Documents\\NetBeansProjects\\Project123\\DB_Help.pdf");

        }catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void Table_ElephantKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Table_ElephantKeyReleased
        if(evt.getKeyCode()==KeyEvent.VK_DOWN||evt.getKeyCode()==KeyEvent.VK_UP){

         try{
            int row=Table_Elephant.getSelectedRow();
            String Table_click=(Table_Elephant.getModel().getValueAt(row,0).toString());
            String sql="select * from Elephantinfo where Elephantid= '"+Table_click+" '";
            pst=conn.prepareStatement(sql);
            rs=pst.executeQuery();

            if(rs.next()){
                String add1=rs.getString("elephantid");
                txt_Elephantid.setText(add1);
                String add2=rs.getString("elephantname");
                txt_Elephantname.setText(add2);
                String add3=rs.getString("sex");
                txt_Sex.setText(add3);
                Date add4=rs.getDate("dateofbirth");
                txt_Dateofbirth.setDate(add4);
                String add5=rs.getString("mother");
                txt_Mother.setText(add5);
                String add6=rs.getString("father");
                txt_Father.setText(add6);
                Date add7=rs.getDate("dateofregistration");
                txt_Dateofregistration.setDate(add7);
                String add8=rs.getString("placeofcapturebirth");
                txt_Placeofcapture.setText(add8);
                String add9=rs.getString("deathexchange");
                txt_Death.setText(add9);
                String add10=rs.getString("remarks");
                txt_Remarks.setText(add10);

            }

        }catch(Exception e){

            JOptionPane.showMessageDialog(null, e);

        }
       }
    }//GEN-LAST:event_Table_ElephantKeyReleased

    private void Cmd_behavioralActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Cmd_behavioralActionPerformed

        try{
            String pass_id=txt_Elephantid.getText();
            Behavioral_rec s=new Behavioral_rec(pass_id);
            s.setVisible(true );

        }catch(Exception e){
            JOptionPane.showMessageDialog(null,e);
        }
    }//GEN-LAST:event_Cmd_behavioralActionPerformed

    private void Cmd_clinicalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Cmd_clinicalActionPerformed

        try{
            String pass_id=txt_Elephantid.getText();
            Clinical_rec s=new Clinical_rec(pass_id);
            s.setVisible(true );

        }catch(Exception e){
            JOptionPane.showMessageDialog(null,e);
        }
}//GEN-LAST:event_Cmd_clinicalActionPerformed

    private void Cmd_breedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Cmd_breedActionPerformed

        try{
            String pass_id=txt_Elephantid.getText();
            Breeding_rec s=new Breeding_rec(pass_id);
            s.setVisible(true );

        }catch(Exception e){
            JOptionPane.showMessageDialog(null,e);
        }
}//GEN-LAST:event_Cmd_breedActionPerformed

    private void txt_ElephantidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_ElephantidActionPerformed
        // TODO add your handling code here:
}//GEN-LAST:event_txt_ElephantidActionPerformed

    private void jMenuItem10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem10ActionPerformed

        try{            
            All_clinical_rec s=new All_clinical_rec();
            s.setVisible(true );

        }catch(Exception e){
            JOptionPane.showMessageDialog(null,e);
        }
    }//GEN-LAST:event_jMenuItem10ActionPerformed

    private void jMenuItem11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem11ActionPerformed

        try{
            All_behavioral_rec s=new All_behavioral_rec();
            s.setVisible(true );

        }catch(Exception e){
            JOptionPane.showMessageDialog(null,e);
        }
    }//GEN-LAST:event_jMenuItem11ActionPerformed

    private void jMenuItem12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem12ActionPerformed

        try{
            All_breeding_rec s=new All_breeding_rec();
            s.setVisible(true );

        }catch(Exception e){
            JOptionPane.showMessageDialog(null,e);
        }
    }//GEN-LAST:event_jMenuItem12ActionPerformed

    private void jMenuItem14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem14ActionPerformed
        try{
            String URL="http://www.elephant.se/location2.php?location_id=43";
            java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
        }catch(Exception e){
            JOptionPane.showMessageDialog(null,e);
        }
    }//GEN-LAST:event_jMenuItem14ActionPerformed

    private void jMenuItem9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem9ActionPerformed
        About s =new About();
        s.setVisible(true);
    }//GEN-LAST:event_jMenuItem9ActionPerformed

    private void jMenuItem13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem13ActionPerformed

        MessageFormat header=new MessageFormat("Elephant Medical System Batabase Report");
        MessageFormat footer=new MessageFormat("Page(0,number,integer)");

        try{

            Table_Elephant.print(JTable.PrintMode.FIT_WIDTH,header,footer);

        }catch(java.awt.print.PrinterException e){
            System.err.format("Cannot print %s%n",e.getMessage() );

        }
    }//GEN-LAST:event_jMenuItem13ActionPerformed

    private void Cmd_printActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Cmd_printActionPerformed

        MessageFormat header=new MessageFormat("Elephant Medical System Batabase Report");
        MessageFormat footer=new MessageFormat("Page(0,number,integer)");

        try{

            Table_Elephant.print(JTable.PrintMode.FIT_WIDTH,header,footer);

        }catch(java.awt.print.PrinterException e){
            System.err.format("Cannot print %s%n",e.getMessage() );

        }
    }//GEN-LAST:event_Cmd_printActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        txt_Elephantid.setText("");
        txt_Elephantname.setText("");
        txt_Sex.setText("");
        txt_Dateofbirth.setDate(null);
        txt_Mother.setText("");
        txt_Father.setText("");
        txt_Dateofregistration.setDate(null);
        txt_Placeofcapture.setText("");
        txt_Death.setText("");
        txt_Remarks.setText("");
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        txt_Elephantid.setText("");
        txt_Elephantname.setText("");
        txt_Sex.setText("");
        txt_Dateofbirth.setDate(null);
        txt_Mother.setText("");
        txt_Father.setText("");
        txt_Dateofregistration.setDate(null);
        txt_Placeofcapture.setText("");
        txt_Death.setText("");
        txt_Remarks.setText("");
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void jMenu2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenu2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenu2ActionPerformed

    private void jMenuItem5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem5ActionPerformed
        try{
            String sql="INSERT INTO elephantinfo (elephantid,elephantname,sex,dateofbirth,mother,father,dateofregistration,placeofcapturebirth,deathexchange,remarks) VALUES (?,?,?,?,?,?,?,?,?,?)";
            pst=conn.prepareStatement(sql);

            pst.setString(1, txt_Elephantid.getText());
            pst.setString(2, txt_Elephantname.getText());
            pst.setString(3, txt_Sex.getText());
            pst.setString(4, ((JTextField) txt_Dateofbirth.getDateEditor().getUiComponent()).getText());
            pst.setString(5, txt_Mother.getText());
            pst.setString(6, txt_Father.getText());
            pst.setString(7, ((JTextField) txt_Dateofregistration.getDateEditor().getUiComponent()).getText());
            pst.setString(8, txt_Placeofcapture.getText());
            pst.setString(9, txt_Death.getText());
            pst.setString(10, txt_Remarks.getText());

            pst.execute();

            JOptionPane.showMessageDialog(null,"Saved");


        }catch(Exception e){
            JOptionPane.showMessageDialog(null,e);
        }
        Update_table();
    }//GEN-LAST:event_jMenuItem5ActionPerformed

    private void jMenuItem6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem6ActionPerformed

        int p=JOptionPane.showConfirmDialog(null, "Do you really want to delete ?","Delete",JOptionPane.YES_NO_OPTION);

     if(p==0){

        String sql="delete from Elephantinfo where Elephantid =?";

        try{
            pst=conn.prepareStatement(sql);
            pst.setString(1, txt_Elephantid.getText());
            pst.execute();
            JOptionPane.showMessageDialog(null,"Deleted");

        }catch(Exception e){
            JOptionPane.showMessageDialog(null,e);
        }
        Update_table();
        }
    }//GEN-LAST:event_jMenuItem6ActionPerformed

    private void jMenuItem7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem7ActionPerformed
        try{
            String value1=txt_Elephantid.getText();
            String value2=txt_Elephantname.getText();
            String value3=txt_Sex.getText();
            String value4=((JTextField) txt_Dateofbirth.getDateEditor().getUiComponent()).getText();
            String value5=txt_Mother.getText();
            String value6=txt_Father.getText();
            String value7=((JTextField) txt_Dateofregistration.getDateEditor().getUiComponent()).getText();
            String value8=txt_Placeofcapture.getText();
            String value9=txt_Death.getText();
            String value10=txt_Remarks.getText();

           String sql="update Elephantinfo set elephantid='"+value1+"',elephantname='"+value2+"',sex='"+value3+"',dateofbirth='"+value4+"',mother='"+value5+"',father='"+value6+"',dateofregistration='"+value7+"',placeofcapturebirth='"+value8+"',deathexchange='"+value9+"',remarks='"+value10+"' where elephantid='"+value1+"' ";
           pst=conn.prepareStatement(sql);
           pst.execute();
           JOptionPane.showMessageDialog(null,"Updated");

        }catch(Exception e){
            JOptionPane.showMessageDialog(null,e);

        }
        Update_table();
    }//GEN-LAST:event_jMenuItem7ActionPerformed

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        try {

            UIManager.setLookAndFeel("com.sun.java.swing.plaf.windows.WindowsLookAndFeel");
            java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Elephant_info().setVisible(true);
            }
        });


        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Elephant_info.class.getName()).log(Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            Logger.getLogger(Elephant_info.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            Logger.getLogger(Elephant_info.class.getName()).log(Level.SEVERE, null, ex);
        } catch (UnsupportedLookAndFeelException ex) {
            Logger.getLogger(Elephant_info.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Cmd_behavioral;
    private javax.swing.JButton Cmd_breed;
    private javax.swing.JButton Cmd_clinical;
    private javax.swing.JButton Cmd_delete;
    private javax.swing.JButton Cmd_new;
    private javax.swing.JButton Cmd_print;
    private javax.swing.JButton Cmd_save;
    private javax.swing.JButton Cmd_update;
    private javax.swing.JTable Table_Elephant;
    private javax.swing.JMenu date_txt;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem10;
    private javax.swing.JMenuItem jMenuItem11;
    private javax.swing.JMenuItem jMenuItem12;
    private javax.swing.JMenuItem jMenuItem13;
    private javax.swing.JMenuItem jMenuItem14;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JMenuItem jMenuItem7;
    private javax.swing.JMenuItem jMenuItem8;
    private javax.swing.JMenuItem jMenuItem9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JPopupMenu.Separator jSeparator2;
    private javax.swing.JMenu time_txt;
    private com.toedter.calendar.JDateChooser txt_Dateofbirth;
    private com.toedter.calendar.JDateChooser txt_Dateofregistration;
    private javax.swing.JTextField txt_Death;
    private javax.swing.JTextField txt_Elephantid;
    private javax.swing.JTextField txt_Elephantname;
    private javax.swing.JTextField txt_Father;
    private javax.swing.JTextField txt_Mother;
    private javax.swing.JTextField txt_Placeofcapture;
    private javax.swing.JTextField txt_Remarks;
    private javax.swing.JTextField txt_Sex;
    private javax.swing.JTextField txt_search;
    // End of variables declaration//GEN-END:variables

    private void setIcon() {
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("icon.png")));
    }
}
